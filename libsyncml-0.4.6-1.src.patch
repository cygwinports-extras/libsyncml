--- origsrc/libsyncml-0.4.6/CMakeLists.txt	2007-12-15 11:09:07.000000000 -0600
+++ src/libsyncml-0.4.6/CMakeLists.txt	2008-05-09 12:04:48.656250000 -0500
@@ -25,6 +25,7 @@
 # find header files and type size
 INCLUDE( CheckTypeSize )
 INCLUDE( CheckIncludeFiles )
+INCLUDE( CheckFunctionExists )
 
 CHECK_INCLUDE_FILES( dlfcn.h HAVE_DLFCN_H )
 CHECK_INCLUDE_FILES( inttypes.h HAVE_INTTYPES_H )
@@ -41,6 +42,8 @@
 CHECK_TYPE_SIZE( uint32_t UINT32_T )
 CHECK_TYPE_SIZE( uint8_t UINT8_T )
 
+CHECK_FUNCTION_EXISTS( strcasestr HAVE_STRCASESTR )
+
 # ensure out od source build
 INCLUDE( MacroEnsureOutOfSourceBuild )
 MACRO_ENSURE_OUT_OF_SOURCE_BUILD("${CMAKE_PROJECT_NAME} doesn't allow to build within the source directory. Please, create a seperate build directory and run 'cmake ${PROJECT_SOURCE_DIR} [options]'!")
--- origsrc/libsyncml-0.4.6/libsyncml/CMakeLists.txt	2008-01-19 08:42:19.000000000 -0600
+++ src/libsyncml-0.4.6/libsyncml/CMakeLists.txt	2008-05-09 11:35:18.078125000 -0500
@@ -32,7 +32,7 @@
 
 SET_TARGET_PROPERTIES( syncml PROPERTIES SOVERSION 0 )
 SET_TARGET_PROPERTIES( syncml PROPERTIES VERSION 0.0.0 )
-TARGET_LINK_LIBRARIES( syncml ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES} ${LIBXML2_LIBRARIES} ${BLUEZ_LIBRARIES} ${LIBWBXML2_LIBRARIES} ${LIBSOUP2_LIBRARIES} ${OPENOBEX_LIBRARIES} )
+TARGET_LINK_LIBRARIES( syncml ${GOBJECT2_LIBRARIES} ${GTHREAD2_LIBRARIES} ${LIBXML2_LIBRARIES} ${BLUEZ_LIBRARIES} ${LIBWBXML2_LIBRARIES} ${LIBSOUP2_LIBRARIES} ${OPENOBEX_LIBRARIES} )
 
 INSTALL( TARGETS syncml DESTINATION ${LIBSYNCML_LIBRARIES_DIR} )
 
--- origsrc/libsyncml-0.4.6/libsyncml/sml_support.c	2008-01-15 03:16:43.000000000 -0600
+++ src/libsyncml-0.4.6/libsyncml/sml_support.c	2008-05-09 12:00:52.875000000 -0500
@@ -31,6 +31,31 @@
 #include <string.h>
 #include <stdio.h>
 
+#ifndef HAVE_STRCASESTR
+
+/* borrowed these definitions from Apache */
+#define ap_tolower(c) (tolower(((unsigned char)(c))))
+#define ap_toupper(c) (toupper(((unsigned char)(c))))
+
+static inline
+char *strcasestr( char *h, char *n )
+{ /* h="haystack", n="needle" */
+	char *a=h, *e=n;
+
+	if( !h || !*h || !n || !*n ) { return 0; }
+	while( *a && *e ) {
+		if( ap_toupper(*a)!=ap_toupper(*e) ) {
+			++h; a=h; e=n;
+		}
+		else {
+			++a; ++e;
+		}
+	}
+	return *e ? 0 : h;
+}
+
+#endif /* !HAVE_STRCASESTR */
+
 GPrivate* current_tabs = NULL;
 
 /**
